{"version":3,"sources":["redux/dialogsReducer.js","utils/objectHelpers.js","redux/usersReducer.js","api/api.js","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.css","assets/images/preloaderGif.gif","serviceWorker.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/appReducer.js","redux/reduxStore.js","App.js","index.js","components/common/FormsControls/FormControls.module.css","utils/validators/validators.js","redux/profileReducer.js","components/common/FormsControls/FormsControls.js","redux/sidebarReducer.js","components/Header/Header.module.css","components/common/Preloader/Preloader.jsx"],"names":["initialState","dialogs","id","name","messages","message","addMessageAC","newMessageBody","type","dilogsReducer","state","action","newMessage","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","a","usersAPI","getUsers","data","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unFollow","usersReducer","followed","filter","instance","axios","withCredentials","baseURL","headers","get","then","responce","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","Boolean","window","location","hostname","match","Navbar","className","styleClasses","nav","item","to","activeClassName","active","Header","props","header","src","loginBlock","isAuth","onClick","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Input","error","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","sidebarReducer","usersPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","_store_","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","class","fallback","path","render","Preloader","AppContainer","withRouter","promise","Promise","all","SocialNetworkApp","StrictMode","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostAC","newPostText","setStatusAC","getUserProfile","p","postId","FormControl","input","meta","child","hasError","touched","formControl","children","TextArea","restProps","lds_dual_ring"],"mappings":"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","file":"static/js/main.1be2b6c1.chunk.js","sourcesContent":["import store from \"./store\";\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Paha1\"},\r\n        {id: 2, name: \"Paha2\"},\r\n        {id: 3, name: \"Paha3\"},\r\n        {id: 4, name: \"Paha4\"},\r\n        {id: 5, name: \"Paha5\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"hi1\"},\r\n        {id: 2, message: \"hi2\"},\r\n        {id: 3, message: \"hi3\"},\r\n    ]\r\n};\r\n\r\nconst dilogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = action.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: newMessage}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageAC = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody})\r\n\r\nexport default dilogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n\r\n   return  items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,\r\n                    action.userId,\r\n                    \"id\",\r\n                    {followed: true})\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,\r\n                    action.userId,\r\n                    \"id\",\r\n                    {followed: false})\r\n            };\r\n        case  SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unFollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"48080e8d-2364-4c0b-a823-b3eaa8a869a4\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(responce => responce.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post('follow/' + userId)\r\n    },\r\n    unFollow(userId) {\r\n        return instance.delete('follow/' + userId)\r\n    },\r\n\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId) {\r\n        return instance.get('profile/' + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/' + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', {status : status});\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login( email, password, rememberMe = false ) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_dual_ring\":\"Preloader_lds_dual_ring__2vGea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1NDPI\",\"item\":\"Navbar_item__1MspY\",\"active\":\"Navbar_active__2rRgR\"};","module.exports = __webpack_public_path__ + \"static/media/preloaderGif.26ef8bb4.gif\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styleClasses from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={styleClasses.nav}>\r\n            <div className={styleClasses.item}>\r\n                <NavLink to=\"/profile\" activeClassName={styleClasses.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={styleClasses.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={styleClasses.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={styleClasses.item}>\r\n                <NavLink to=\"/users\" activeClassName={styleClasses.active}>Users</NavLink>\r\n            </div>\r\n            <div className={styleClasses.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={styleClasses.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={styleClasses.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport styleClasses from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={styleClasses.header} >\r\n            <img src='https://cdn.tutsplus.com/vector/uploads/legacy/qt/2012_QT/qt_78_logo_maker/final.jpg'/>\r\n\r\n            <div className={styleClasses.loginBlock}>\r\n                { props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let responce = await authAPI.me();\r\n    if (responce.data.resultCode === 0) {\r\n        let {id, login, email} = responce.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let responce = await authAPI.login(email, password, rememberMe);\r\n            if (responce.data.resultCode === 0) {\r\n                dispatch(getAuthUserData());\r\n            } else {\r\n                let message = responce.data.messages.length > 0\r\n                    ? responce.data.messages[0]\r\n                    : \"Some error\";\r\n                dispatch(stopSubmit(\"login\", {_error: message}));\r\n            }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let responce = await authAPI.logout();\r\n            if (responce.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styleClasses from \"../common/FormsControls/FormControls.module.css\"\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {/*{createField(\"Email\", [required], \"email\", Input)}*/}\r\n            {/*{createField(\"Password\", [required], \"password\", Input, {type: \"password\"})}*/}\r\n            {/*{createField(null, [], \"rememberMe\", Input, {type: \"checkbox\"}, \"remember me\")}*/}\r\n\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n\r\n            {props.error &&\r\n            <div className={styleClasses.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n","import {getAuthUserData} from \"./authReducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return  {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\n\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n   let promise = dispatch(getAuthUserData());\r\n    //когда промис зарезолвится\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n//для расширения redux devtools в chrome\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleWare));\r\n\r\nwindow._store_ = store;\r\nexport default store;\r\n","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n//import UsersContainer from \"./components/Users/UsersContainer\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/reduxStore\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized){\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div class='app-wrapper-content'>\r\n                    <Suspense fallback={<div>Loading...</div>}>\r\n                       <Switch>\r\n                    <Route path='/dialogs'\r\n                           render={() => <DialogsContainer/>}\r\n                    />\r\n                    <Route path='/profile/:userId?'\r\n                           render={() => <ProfileContainer/>}\r\n                    />\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}\r\n                    />\r\n                    <Route path='/login'\r\n                           render={() => <LoginPage/>}\r\n                    />\r\n                        </Switch>\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   initialized: state.app.initialized\r\n});\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nlet SocialNetworkApp = (props) => {\r\n    return <React.StrictMode>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <AppContainer />\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>\r\n}\r\n\r\nexport default SocialNetworkApp;","import React from 'react';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from 'react-dom';\r\nimport SocialNetworkApp from \"./App\";\r\n\r\n\r\n// setInterval (() => {\r\n//     store.dispatch({type: \"FAKE\"})},\r\n//     1000);\r\n\r\n\r\n    ReactDOM.render(\r\n        <SocialNetworkApp/>, document.getElementById('root')\r\n    );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3XtO7\",\"error\":\"FormControls_error__2cT8I\",\"formSummaryError\":\"FormControls_formSummaryError__2lBxU\"};","export const required = value => {\r\n    if (value) {\r\n        return undefined;\r\n    } else {\r\n        return \"Field is required\";\r\n    }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) {\r\n        return `max length is ${maxLength} symbols`;\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"hiiii\", likesCount: 11},\r\n        {id: 2, message: \"huuuuuuu\", likesCount: 13},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 5, message: action.newPostText, likesCount: 0}],\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfileAC = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatusAC = (status) => ({type: SET_STATUS, status})\r\nexport const deletePostAC = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let responce = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfileAC(responce.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let responce = await profileAPI.getStatus(userId);\r\n    dispatch(setStatusAC(responce.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let responce = await profileAPI.updateStatus(status);\r\n    if (responce.data.resultCode === 0) {\r\n        dispatch(setStatusAC(status));\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport styleClasses from \"./FormControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styleClasses.formControl + \" \" + (hasError ? styleClasses.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n    </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, validators, name, component, props={}, text=\"\") => (\r\n     <div>\r\n        <Field placeholder={placeholder}\r\n                        validate={validators}\r\n                        name={name}\r\n                        component={component}\r\n                        {...props}\r\n    /> {text}\r\n    </div>\r\n)\r\n","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    \r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__27WoC\",\"loginBlock\":\"Header_loginBlock__3NKAQ\"};","import React from \"react\";\r\nimport styleClasses from './Preloader.module.css';\r\nimport preloaderGif from '../../../assets/images/preloaderGif.gif';\r\n\r\n\r\nconst Preloader = (props) => {\r\n    return <div>\r\n        {/*<img src={preloaderGif}/>*/}\r\n        <div className={styleClasses.lds_dual_ring}></div>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;"],"sourceRoot":""}