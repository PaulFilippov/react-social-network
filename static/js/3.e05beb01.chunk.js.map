{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","styleClasses","item","to","activeClassName","active","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogElements","dialogs","map","dialog","key","messagesElements","messages","m","isAuth","dialogsItems","values","addMessage","newMessageText","mapStateToPropsForRedirect","auth","compose","connect","dispatch","newMessageBody","addMessageAC","Component","RedirectComponent","this","React"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,oBCA7GD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,6B,oBCA3DD,EAAOC,QAAU,CAAC,QAAU,2B,iHCcbC,EAXI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAaC,MACzB,kBAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAaI,QAC5CR,EAAMS,Q,kBCGRC,EATC,SAACV,GAEb,OACI,yBAAKG,UAAWC,IAAaO,SACxBX,EAAMW,U,yCCFbC,EAAcC,YAAiB,IAkBtBC,cAAU,CACrBC,KAAM,wBADKD,EAhBQ,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBH,KAAK,iBACLc,YAAY,mBAEvB,6BACI,qDCuBDC,EAhCC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAiBF,EAAMG,QACtBC,KAAI,SAAAC,GAAM,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAOrB,KACbsB,IAAKD,EAAO5B,GACZA,GAAI4B,EAAO5B,QAEtC8B,EAAmBP,EAAMQ,SACxBJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QACXoB,IAAKG,EAAEhC,QAM9B,OAAKF,EAAMmC,OAGP,yBAAKhC,UAAWC,IAAawB,SACzB,yBAAKzB,UAAWC,IAAagC,cACxBT,GAEL,yBAAKxB,UAAWC,IAAa6B,UACzB,6BAAMD,IAEV,kBAAC,EAAD,CAAgBhB,SAdJ,SAACqB,GACjBrC,EAAMsC,WAAWD,EAAOE,oBAGF,kBAAC,IAAD,CAAUjC,GAAI,Y,wCCrBxCkC,EAA6B,SAACf,GAAD,MAAY,CACzCU,OAAQV,EAAMgB,KAAKN,S,OCiBRO,sBACXC,aAfkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACkB,GACtB,MAAO,CACHN,WAAY,SAACO,GACTD,EAASE,YAAaD,UDTF,SAACE,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKjD,MAAMmC,OAET,kBAACY,EAAcE,KAAKjD,OAFI,kBAAC,IAAD,CAAUM,GAAI,eAJV,GAEX4C,IAAMH,WAUtC,OAFqCJ,YAAQH,EAARG,CAAoCK,KCI9DN,CAGblB","file":"static/js/3.e05beb01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3XOsK\",\"dialogsItems\":\"Dialogs_dialogsItems__3y4Zk\",\"messages\":\"Dialogs_messages__bENN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__3JCnx\",\"active\":\"DialogItem_active__15kWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2GKTy\"};","import React from \"react\";\r\nimport styleClasses from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={styleClasses.item}>\r\n            <NavLink to={path} activeClassName={styleClasses.active}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport styleClasses from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={styleClasses.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newMessageText\"\r\n                       placeholder=\"Enter message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm);","import React from \"react\";\r\nimport styleClasses from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogElements = state.dialogs\r\n        .map(dialog => <DialogItem name={dialog.name}\r\n                                   key={dialog.id}\r\n                                   id={dialog.id}/>);\r\n\r\n    let messagesElements = state.messages\r\n        .map(m => <Message message={m.message}\r\n                           key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageText);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={styleClasses.dialogs}>\r\n            <div className={styleClasses.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={styleClasses.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from \"react\";\r\nimport {addMessageAC} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageAC(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n;"],"sourceRoot":""}